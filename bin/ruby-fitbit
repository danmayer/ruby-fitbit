#! /usr/bin/env ruby	
require File.join(File.dirname(__FILE__), '..', 'lib', 'ruby-fitbit')
require 'hirb'
require 'trollop'
require 'yaml'	

opts = Trollop::options do
  opt :passfile, "Use password file"
  opt :username, "Username", :type => :string
  opt :password, "Password", :type => :string
end

if(opts[:passfile])
  raw_config = IO.read(File.expand_path("~/.fitbitrc"))
  APP_CONFIG = YAML.load(raw_config)["config"]
  @password = APP_CONFIG[:password]
else
  @password = opts[:password]
end

if(opts[:username]!=nil && @password!=nil)
  fitbit = RubyFitbit.new(opts[:username],@password)

  #testing some in progress API methods
  #fitbit.submit_food_log({:food => 'wrap', :unit => '1 serving'})
  #puts fitbit.submit_weight_log({:unit => 'lbs', :weight => '131'})
  #fitbit.get_food_items
  #puts fitbit.get_eaten_calories[:calories_xml]
  #exit 1

  begin
    date = Time.parse(ARGV[3])
  rescue
    date = Time.now
  end

  begin
    end_date = Time.parse(ARGV[4])
  rescue
    end_date = Time.now
  end
  
  data = fitbit.get_data(date)
  puts "Fitbit Data for #{date}"
  puts "Calories Burned #{data['calories']}"
  puts "Steps Taken #{data['steps']}"
  puts "Milkes Walked #{data['miles_walked']}"
  puts "Activity Levels Durations:"
  puts "Sedentary #{data['sedentary_active']}"
  puts "Lightly #{data['lightly_active']}"
  puts "Fairly # => #{data['fairly_active']}"
  puts "Very #{data['very_active']}"
else
  puts "Usage: 'ruby-fitbit user@email.com [password|-passfile]'"
  puts "(hint: better to put your password in ~/.fitbitrc)"
end

if ARGV[2]!=nil

  case ARGV[2]
  when 'calorie'
    puts "calorie data for data #{date}"
    data = fitbit.get_calorie_data(date)
  when 'activity' 
    puts "calorie data for data #{date}"
    data = fitbit.get_activity_score_data(date)
  when 'weight'
    puts "logging weight"
  when 'summary'
    #do nothing just print the summary above
  else
    puts "steps data for data #{date}"
    data = fitbit.get_steps_data(date)
  end
  puts Hirb::Helpers::AutoTable.render(data)
end

if ARGV[4]!=nil
  puts "getting aggregated data"
  data = fitbit.get_aggregated_data(date, end_date) 
  puts Hirb::Helpers::AutoTable.render(data)
  puts "Average Data over that time"
  data = fitbit.get_avg_data(date, end_date) 
  puts Hirb::Helpers::AutoTable.render(data)
end

puts "done"
